<<<<<<< HEAD
state_list <- unique(df$States)
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
gender_list <- unique(df$Gender)
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
shiny::runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
library(dplyr)
library(ggplot2)
library(tidyr)
data <- read.csv("data/intentional_self_harm_data.csv")
data$Death <- as.numeric(as.character(data$Death))
data$Population <- as.numeric(as.character(data$Population))
data <- data %>% mutate(Rate = round(Death/Population*100000,2))
as.character(data$State)
=======
>>>>>>> b0819294b60faa59246371f51fcf9d8d0319419f
data$state_length <- nchar(as.character(data$State))
data$state_length <- as.numeric(data$state_length)
usa_data <- data %>% group_by(Year, Gender) %>% summarize(Death = sum(Death), Population = sum(Population), States = "United States")
usa_data <- usa_data %>% mutate(Rate = round(Death/Population*100000,2))
usa_data <- usa_data %>% select(5,2,1,3,4,6)
data$States <-substr(data$State, 1, data$state_length -5)
df <- data %>% select(9,2,3,4,5,7)
combined_df <- bind_rows(usa_data, df)
write.csv(combined_df, file = 'data/combined.csv')
state_list <- unique(df$States)
gender_list <- unique(df$Gender)
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp()
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp()
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
state_list <- unique(combined_df$States)
gender_list <- unique(combined_df$Gender)
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
combined_df <- read.csv(file = "../Overall-Claire/data/combined.csv")
state_list <- unique(combined_df$States)
gender_list <- unique(combined_df$Gender)
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
source("../External_Factors/carol_analysis.R")
external <- read.csv(file = "../External_Factors/data/prepare_data.csv")
source("../Overall-Claire/analysis.R")
combined_df <- read.csv(file = "../Overall-Claire/data/combined.csv")
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
## Claire's Code
output$trend_graph <- renderPlot({
return(overall_trend(combined_df, input$region1, input$region2,input$gender))
})
## Daisy's Code
## Mengjiao's Code
## Carol's Code
output$external_plot <- renderPlot({
return(create_plot(external, input$external_factors))
})
})
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
#
# This is the user-interface definition of a Shiny web application. You can
# run the application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(shinythemes)
library(markdown)
library(plotly)
combined_df <- read.csv(file = "../Overall-Claire/data/combined.csv")
state_list <- unique(combined_df$States)
gender_list <- unique(combined_df$Gender)
# Define UI for application that draws a histogram
shinyUI(tagList(
navbarPage(theme = shinytheme("slate"),
"Suicide",
# Claire's Panel
tabPanel(
"Trend of Suicide in the U.S.",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region1", label = "Select First Region", selected = "Washington",state_list
),
selectInput(
inputId = "region2", label = "Select Second Region", selected = "California",state_list
),
selectInput(inputId = "gender", label = "Select Gender", selected = "Female", gender_list),
),
mainPanel(
plotlyOutput("trend_graph")
) # main panel
) # sidebar layout
), # tabPanel
# Carol's Panel
tabPanel(
"Worldwide Statistics",
titlePanel(tags$div(tags$h1(class = "Title",
"External Factors"))),
sidebarLayout(
sidebarPanel(
selectInput('external_factors',
label = h3('Choose an possible external factor'),
choices = list(
'GDP' = 'GDP',
'Health Expenditure' = 'Health',
'Unemployment Rate' = 'Unemployment'
),
width = '200px'
),
tags$br(),
tags$h3("Description"),
tags$h5(class = "context",
"With this interactive bar chart, you can explore the
dataset within different time periods. In the specific
decade you choose, the graph displays numbers of shark
attacks against different time periods. For instance,
if you want to learn about the month with the highest
frequency of attacks and the month with less frequency of
attacks between 2010-2017. You can do this in two simple
steps:"),
tags$h5(class = "context", "1. Set the decade to 2010-2017"),
tags$h5(class = "context", "2. Set the unit, time period, as month."),
tags$h5(class = "context", "That's it! Feel free to explore!")
),
mainPanel(
plotOutput("external_plot",
width = "800px", height = "600px"
)
)
)
),
# Daisy's Panel
tabPanel(
"Risk Factors of Suicide",
tabsetPanel(
#tab1 introduction
tabPanel(
"Introduction"
# includeMarkdown("Script/TaxMarkDown.Rmd")
),
# more panels overhere
tabPanel(
"Sub - Panel 2"
# includeMarkdown("Script/TaxMarkDown.Rmd")
)
)
),
# Mengjiao's Panel
tabPanel(
"Preventive Factors of Suicide",
tabsetPanel(
#tab1 introduction
tabPanel(
"Introduction"
# includeMarkdown("Script/TaxMarkDown.Rmd")
),
# more panels overhere
tabPanel(
"Sub - Panel 2"
# includeMarkdown("Script/TaxMarkDown.Rmd")
)
)
)
)
))
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
source("../External_Factors/carol_analysis.R")
external <- read.csv(file = "../External_Factors/data/prepare_data.csv")
source("../Overall-Claire/analysis.R")
combined_df <- read.csv(file = "../Overall-Claire/data/combined.csv")
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
## Claire's Code
output$trend_graph <- renderPlot({
return(overall_trend(combined_df, input$region1, input$region2,input$gender))
})
## Daisy's Code
## Mengjiao's Code
## Carol's Code
output$external_plot <- renderPlot({
return(create_plot(external, input$external_factors))
})
})
library(dplyr)
library(ggplot2)
library(tidyr)
data <- read.csv("data/intentional_self_harm_data.csv")
data$Death <- as.numeric(as.character(data$Death))
data$Population <- as.numeric(as.character(data$Population))
data <- data %>% mutate(Rate = round(Death/Population*100000,2))
as.character(data$State)
data$state_length <- nchar(as.character(data$State))
data$state_length <- as.numeric(data$state_length)
usa_data <- data %>% group_by(Year, Gender) %>% summarize(Death = sum(Death), Population = sum(Population), States = "United States")
usa_data <- usa_data %>% mutate(Rate = round(Death/Population*100000,2))
usa_data <- usa_data %>% select(5,2,1,3,4,6)
data$States <-substr(data$State, 1, data$state_length -5)
df <- data %>% select(9,2,3,4,5,7)
combined_df <- bind_rows(usa_data, df)
write.csv(combined_df, file = 'data/combined.csv')
state_list <- unique(df$States)
gender_list <- unique(df$Gender)
library(plyr)
library(dplyr)
library(tidyr)
library(ggplot2)
overall_trend <- function(combined_df,state_one, state_two, gender_choice){
chosen_states <- combined_df %>% filter(States == state_one| States == state_two| States == "United States")
chosen_gender <- chosen_states %>% filter(Gender == gender_choice)
p <- ggplot(data = chosen_gender) +
geom_line(mapping = aes(x= Year, y = Rate, group = States, color = States))+
geom_point(mapping = aes(x= Year, y = Rate, group = States, color = States))
p
}
shiny::runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp()
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
#
# This is the user-interface definition of a Shiny web application. You can
# run the application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(shinythemes)
library(markdown)
library(plotly)
combined_df <- read.csv(file = "../Overall-Claire/data/combined.csv")
state_list <- unique(combined_df$States)
gender_list <- unique(combined_df$Gender)
# Define UI for application that draws a histogram
shinyUI(tagList(
navbarPage(theme = shinytheme("slate"),
"Suicide",
# Claire's Panel
tabPanel(
"Worldwide Statistics",
titlePanel(tags$div(tags$h1(class = "Title",
"Overall Trend"))),
sidebarLayout(
sidebarPanel(
selectInput('region1',
label = h3('Select a State'),
choices = state_list,
width = '200px'),
selectInput('region2',
label = h3('Select a State'),
choices = state_list,
width = '200px'),
selectInput('gender',
label = h3('Select a Gender'),
choices = gender_list,
width = '200px'),
tags$br(),
tags$h3("Description"),
tags$h5(class = "context",
"With this interactive bar chart, you can explore the"),
tags$h5(class = "context", "1. Set the decade to 2010-2017")
),
mainPanel(
plotOutput("trend_graph",
width = "800px", height = "600px"
)
)
)
),
# Carol's Panel
tabPanel(
"Worldwide Statistics",
titlePanel(tags$div(tags$h1(class = "Title",
"External Factors"))),
sidebarLayout(
sidebarPanel(
selectInput('external_factors',
label = h3('Choose an possible external factor'),
choices = list(
'GDP' = 'GDP',
'Health Expenditure' = 'Health',
'Unemployment Rate' = 'Unemployment'
),
width = '200px'
),
tags$br(),
tags$h3("Description"),
tags$h5(class = "context",
"With this interactive bar chart, you can explore the
dataset within different time periods. In the specific
decade you choose, the graph displays numbers of shark
attacks against different time periods. For instance,
if you want to learn about the month with the highest
frequency of attacks and the month with less frequency of
attacks between 2010-2017. You can do this in two simple
steps:"),
tags$h5(class = "context", "1. Set the decade to 2010-2017"),
tags$h5(class = "context", "2. Set the unit, time period, as month."),
tags$h5(class = "context", "That's it! Feel free to explore!")
),
mainPanel(
plotOutput("external_plot",
width = "800px", height = "600px"
)
)
)
),
# Daisy's Panel
tabPanel(
"Risk Factors of Suicide",
tabsetPanel(
#tab1 introduction
tabPanel(
"Introduction"
# includeMarkdown("Script/TaxMarkDown.Rmd")
),
# more panels overhere
tabPanel(
"Sub - Panel 2"
# includeMarkdown("Script/TaxMarkDown.Rmd")
)
)
),
# Mengjiao's Panel
tabPanel(
"Preventive Factors of Suicide",
tabsetPanel(
#tab1 introduction
tabPanel(
"Introduction"
# includeMarkdown("Script/TaxMarkDown.Rmd")
),
# more panels overhere
tabPanel(
"Sub - Panel 2"
# includeMarkdown("Script/TaxMarkDown.Rmd")
)
)
)
)
))
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
shiny::runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/finalproject')
runApp('~/Desktop/finalproject')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
install.packages("DT")
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
install.packages("tidyverse")
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
View(combined_df)
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
install.packages("ggplotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
shiny::runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
shiny::runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
state_one <- "Alabama"
combined_df <- read.csv(file = "Overall-Claire/data/combined.csv")
combined_df <- read.csv(file = "data/combined.csv")
state_one <- "Alabama"
state_one_df <- combined_df %>% filter(States == state_one) %>% filter(Gender == gender_choice)
state_one_min <- state_one_df %>% filter(Rate == min(Rate))
state_one_min$Year
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
state_one_2000
combined_df <- read.csv(file = "data/combined.csv")
state_one <- "Alabama"
state_one_df <- combined_df %>% filter(States == state_one) %>% filter(Gender == gender_choice)
state_one_min <- state_one_df %>% filter(Rate == min(Rate))
state_one_min_row <- head(state_one_min,1)
state_one_max <- state_one_df %>% filter(Rate == max(Rate))
state_one_2000 <- state_one_df %>% filter(Year == "2000")
state_one_2010 <- state_one_df %>% filter(Year == "2010")
state_two_df <- combined_df %>% filter(States == state_two) %>% filter(Gender == gender_choice)
state_two_min <- state_two_df %>% filter(Rate == min(Rate))
state_two_max <- state_two_df %>% filter(Rate == max(Rate))
state_one_max_row <- head(state_one_max,1)
state_two_min_row <- head(state_two_min,1)
state_two_max_row <- head(state_two_max,1)
state_two_2000 <- state_two_df %>% filter(Year == "2000")
state_two_2010 <- state_two_df %>% filter(Year == "2010")
state_one_2000$Year
state_one_2000$Rate
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
runApp('~/Desktop/HealthReport-TeamBug/Suicide478')
source("introduction.R")
setwd("~/Desktop/HealthReport-TeamBug/Suicide478")
source("introduction.R")
# The purpose of the project, source of the data, and any pertinent information about the topic area are introduced.
#You may also want to include links to the code, or information about the team.
# purpose of the project
purpose <- "Suicide, as a major, preventable mental health problem, has been the leading causes of death among a variety of
age groups worldwide [1]. As the suicidal rate kept increasing for the past years, under the social concerns and curiosity,
many researchers have looked into the topic of suicide and have identified a wide range of risk factors, such as mental disorder,
substance abuse, and family histories [2]. However, their findings consist huge limitations - since the researchers could not
study suicide under experimental control due to ethical reasons, they have little to no direct knowledge about how these risk
factors exactly contribute and lead to suicide [3]. Moreover, despite the high incidence, the topic of suicide has not been
adequately addressed enough both in terms of national awareness and strategy for intervention [1]. In other say, there is still
a gap between the general public’s knowledge and prevention strategies that could and should be implemented. Therefore, by using
the data from studies in the US, we would like to bridge the gap between the topic of suicide and the general public by not only
making them aware of the common risk factors but also providing them prevention strategies through effective interactive
visualizations. In addition, we will also compare national-level data to explore how some external factors, such as GDP,
instead of internal factors, may associate or contribute to the suicidal rate."
data_one <- "
We are planning on using multiple datasets to study suicide-related mental health issues. The first data includes information about
suicide rate in all states in the United States, and how the rate differs between female and male from 2000 to 2010. The data was accessed from Center
for Disease Control and Prevention. From this data, we want to study the overall trend of suicide in the United States.
"
data_two <- "data two"
data_three<- "data three"
data_four <- "data four"
data_five<- "data five"
# Information about the team
# source of the data
# topics included
# link to code
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
<<<<<<< HEAD
=======
shiny::runApp()
runApp()
shiny::runApp()
>>>>>>> b0819294b60faa59246371f51fcf9d8d0319419f
